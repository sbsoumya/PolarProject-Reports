%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: new
%%CreationDate: Thu Jan 23 20:20:16 2014
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 639 218
%%DocumentFonts: CMR10 CMMI5 CMR5 CMR9 CMMI9 CMBX10 CMMI10 CMR7 CMMI7
%%+ CMSY10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Pdownload35 -T
%+ 22.531428574408807cm,7.68204520387309cm new -o
%+ /home/neo/Desktop/new.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.01.23:2020
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 rotate
 /MidPoint ED
 /NumLines ED
 /LastBlue ED
 /LastGreen ED
  /LastRed ED
  /FirstBlue ED
  /FirstGreen ED
/FirstRed ED
% D.G. modification begin - Apr.  9, 1998
/GradientPosY ED
/GradientPosX ED
  /GradientScale ED
  /ifGradientCircle ED
% D.G. modification end
  % This avoids gaps due to rounding errors:
    clip
  pathbbox           %leave llx,lly,urx,ury on stack
% D.G. modification begin - Apr. 10, 1998
  4 copy /ury ED /urx ED /lly ED /llx ED
% D.G. modification end
  /y ED /x ED
% D.G. modification begin - Apr. 10, 1998
ifGradientCircle
   {0 GradientPosX eq
    {0 GradientPosX eq {2 copy translate} if} if}
   {2 copy translate} ifelse
% D.G. modification end
    y sub neg /y ED
  x sub neg /x ED  % This avoids gaps due to rounding errors:
  LastRed FirstRed add 2 div
   LastGreen FirstGreen add 2 div
  LastBlue FirstBlue add 2 div
    setrgbcolor
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {/YSizePerLine y NumLines div def
    /CurrentY y 2 div def
    /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def}
       {fill
    /YSizePerLine y NumLines div def
        /CurrentY 0 def
    /MidLine NumLines 1 MidPoint sub mul abs cvi def} ifelse
% DG modification end
  MidLine NumLines 2 sub gt
    { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
   ifelse
    MidLine 0 gt
      {
    /Red FirstRed def
       /Green FirstGreen def
           /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
    MidLine { GradientLoop } repeat
      } if
       MidLine NumLines lt
         {
    /Red LastRed def
       /Green LastGreen def
       /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoop } repeat  }
     if
     } def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      Red Green Blue setrgbcolor fill
      /CurrentY CurrentY YSizePerLine sub def
      /Blue Blue BlueIncrement add def
      /Green Green GreenIncrement add def
      /Red Red RedIncrement add def} if}   {0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
    Red Green Blue setrgbcolor fill    /CurrentY CurrentY YSizePerLine add def
    /Blue Blue BlueIncrement add def    /Green Green GreenIncrement add def
    /Red Red RedIncrement add def} ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 106 /bar put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC5703711DA090312BA3FC00A08C453C609
C627A8BED9C24CA54888664F822536B9E6EF4A7072DCED908ADB86ECCC9110AF
D129CEC6DD2BC5BDABBB58560572DB95B81E05358AE0207CC1FBC53DE3B659A8
F8DC4E9A25EAC8AFE2279AFA28A3DC388FB4102574E27372FFE9F0FEF545567B
73F8E8B81092EA89F0A89CCC404C690230F23C189B1F620D649061090CD6AA3A
8A50D2880EED3436049FB4E487AF867DE0722FD729872CA4B2FDFCB2F088363F
D606847BF3DADE817F03F08492B86A983355D467FED0A921AFD20B7CA6866D56
7B4F9CB6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 116 /t put
readonly def
/FontBBox{0 -250 1171 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC194F782420BB447DE705EAE7963391B366466CEF6EFF12F752A1A08
5D464D0F4B50AD8DD1C788E27F48F0F152427DD233163EBCE100275A3F40CEC5
D969507D21AB1DBCC828D96B3DB57C06014295B011A36777C1CF46A5B4325AE5
8AC0F73016865EE9236F565A75D4E5DE348A26D32DFB48EEAD527A869CF21CD8
268132B83DE633E50E297C8FA80A4EAB3CF332D1D7C304028A7480D5BC9CC748
CBE6DD90152A8EFB1644FB19F9F7303242B6E3B4AEA06FABEF4DE0CD3A7F5DCA
A60FA5779C918511D01C573C88FC26E905C5E08547656789C5C3C82F2ED33704
8CCF9D0BC26AA9767878E5FB2453BBECD8DA07F06B0B5DACFD98C425AC948B7D
3F623CC4CDDB314E32D8A89B83AA7E60467792D0E4430417B46DD3C8757EAF50
54EC0A4118E311955F0C8759F479AC1FE3E9C7FD0A1192980769F9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A4DE3E3F6222F
7A252B780C86447859579C68FE065411FD8ADADF4FC7DE51F8FD675D89D8660B
E7C97553F2D04925B72675324E1F1812AAA3BD881E968F16EDE2BDEC29955667
9E28B8AFCDC4E73FC735123B91F110188E4158D075070E40460602F27C12ADA7
A45B6318E24F206E2CA486BC1A90C9AD86B84CA04B57354721DDC0A60E6C3A73
429B900B12A14AB1A57500F5DA0A649E0E3899029331E48ADCE3457B064F4D4F
D4C9D6AA67E2CC75B822A090EB31C4E78B3FFA9F9F3DB10177C5AB6561041870
015CF27E4FDA0F155F1642F2BD0D4CBE322B29DA184C025DDF95869B5218A24C
90802F8C9FC82FFED0A466A364C162DDF246F203E46D650355B4C10EDE176886
2474B6FB50199C2F24CF819F44949E8DED68D4167E6657E434923FB5500BD442
56A0B82C3B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 78 /N put
dup 112 /p put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
956017667094CD8DC214A666D7D12CB23EC030318B42FA95C1F83AA4EAB4D51E
C8C46C3D8947F1ECE1879B494F453090F61E99597FC854097F0E75DC2CA3E45F
04949A6EB295BDB3109A4AE340F5AF61B268C778B816A5012CE95CD7139456E2
55878B3086F53C0876F0D8926C124034D2243A8ACEB1C795B8A3C51805C16DE5
4A27D6E244A002B3F22C5DF748FE8BD4822CB439A773E9CD5B3BFE7D0F071424
5E5925B2A78357F261EC50F4D31A9D5407263990021B2C1827CB75B12D161A88
6B9BE75A1354ECABA79A5D05B49662C26A85E403530EC9E48166A12C40DC1155
020EA7DA8770F40F700E159DF1E1515B746DAF61E47409B633E4E492A43A6228
E63D98D19EED13786CADC946346AC7ED5A20696D2FB973506CB481F3D6B691CA
C7AE65BB84154AC4145A9C4E976569053DC15DECF0EC43000F80F275374E4FAF
DEFA018DFBD92F8B96188EB32A966B8A19627E3196BE73A186BC9D61B84EB368
C308C7DC9A15DBE413F32AB77BE412F9D29C1DA9983BAA5E2397222254797684
35AB7288284841020369FACBE6549D95F59D7E449049A96347ADD04975D9DA5C
A1A301FAD71F69E0429FFB60357666A012F0E06328DBCCC9D2B35C68F099076C
B5F8CD05E67CA39F372F43365C5EF57C09A7F032B87AA84A25B4F7287CB43636
C26C65BBA86140EFE79166C63FEEC0E742A2297D839E429F51FF7479FCBA5C95
9E6670DD099888630E1F6B2341769E97556D048854D33A3E9B5A7B7B8E7BDA3C
5599EEE75B273934A5AD9B382DC489C8C397F110572BFE33879D804F5521DEE5
DAD8ADD81EEC8E720FC687673ED4FC70F72306B41C510A597F356FABAA4619C6
09AB08B260DC60322C9EA469D8D6E724071388043DB7764B2870C5B52A6566AA
36998282EC0FF5FDFF37376B672685E5293BC38D66E3F7D0D53B229D65064FF0
2614453E090A54F278F6C48102BFD08127695B579524B939298ABEE0A140BC72
E8B6AD56B97F3344D9C7B7162E66F52EC0E109D3A8F2ECFAA3DBC34415FAA832
8A99303C37372E991968AB395F9DF770E866677DEE6EB3B85A3E5626B8139051
BFEADDCBB972AFFC9F7341F49B0F56DFE7B3D5F5F3856CCF89DD09CC3E6789B1
A0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 80 /P put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6208B828DEF6B21E
BD3A70AA730E2F900B411C06A05C133324D17770C917698F799AF3106A045320
6FC27D3F8F01E62BA4E67058AB441CE24C4A07D8FCF1DDFB27E19E2AD33480A9
5892105E7435D68DFB5B3BC3F3EEC02BF0E32A9F659FA3191D04A56EC2D097AD
7314ACDB6FC83D45B9D54D8D593CE0E1F166DE97356EDC3544142F06202E6F7F
85C21F704010FD844E958D92EACFFC826FC39DA0D686041177ABEE638F8C21AD
1D13D18209F1219F9A1619C6D867C1063341E30B49E0AF725F33C1522522D8B5
4970CA2D1E3414E21C20B8AA569E68C1FFBEE8A6DEC07D47FFAD34A12895B658
7CEADCC469FF3B2A422F147E08578D867F27B3A1A3F8075FC5AC38C955D3C6DC
9C69B5850B905CD8B42F008E1E69DACBC2064B86CA97040CA98880C2B18BB28D
2A77E1D5EAC17A078FB49D6CEC3A003AD97E7699B0D9D02F1B51F3C6DF6F45D4
1E551CB2D3F55CBFC8CBCFD7F9AFB62B4BC36E021693306E17DF2D9686FDF1F0
122A886D3AD63FF387F30C8A53FC6F8B065C026E1C4712985DFBAE3A9BC855D9
FF7B893CC31F7949ADAFA7FD22C8F9537DE47BE897DB1854F135C2B69D885DAE
F783AF89593B1AD47809692DF4DFBFA3EDA081AA379231DB5D3C3329601F7258
792CAB89B0AA16F6A2EEC6E205233A0ED080E051E7E3875E00B42D99C4FBF4D3
6874B57BF2FFC4C755DFBA0D07A1B16701C6E056AD71060AFF1FCF437087E6F1
B4B59D1EF26283882895BC45506536AD0BBB413EA8041C71F03A0EA103C8F6CB
E32192CC7F9E480CB4BEE08776A2D4F0806F14B5D730A326B16AFEE683F3B6F3
0A2AC8FC1BD7F1A1811D33BAFDEE6B9AEB7D78C5BF1232A97AC16FDD20FE899F
6274FDA5153D21F4B9B9B15EF37258AFB68DC1CDFB415A4253AE81E6D77174A8
F564AF0978778F70D87585C141E0C41F2337AF46AF39F0024A29D33026035C56
F772C8099CB942DBA4AA7F757E0A71B1A8B611F218D6E34422DF8840905067AE
5EF3A43A98CB5C03DB96E4B5EBE0CC2752F776FAFD6375A69305CA7C0B262798
3812750FA0A1922D803B2E24BD6C6FA7CCD04CBB52352EC5537C9040FD20DAD4
F63FFDF7597F7711144FF705F763051B83FCBDD8073413250372
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.1: CMMI9 1.100
%%CreationDate: 1996 Jul 23 07:53:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 112 /p put
readonly def
/FontBBox{-29 -250 1075 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D6F5CA5FED4F9AC9ADE41E04F9FC52E758C9F45A92BED935
86F9CFDB57732045913A6422AD4206418610C81D882EE493DE9523CC1BFE1505
DD1390B19BC1947A01B93BC668BE9B2A0E69A968554239B88C00AF9FBDF09CCD
67D3B2094C11A04762FE8CC1E91D020A28B3C122D24BEAACF82313F4604F2FEF
6E176D730A879BE45DD0D4996EF0247AEB1CA0AB08FF374D99F06D47B36F9554
FAD9A2D3CE451B7791C3709D8A1DDDEFBD840C1B42AB824D5A0DFF0E0F15B0B7
22AEEB877FF489581DA6FA8DA64944555101EB16F7AB0B717E148B7B98D8DBFD
730C52937E226545CF8DC3E07C5BA30739BAFCD0F2B44275A6D503F582C0FB4F
449963D0AD2FAFDE33BA3D77BCA9D1DF878DDAFCA2E22CC4BACD542B282164C7
97C2BDE318AF9D501CA21F6E662E7AAB75A5F24D2C182E598D175D44E88AB19A
E7CD59584F95B389183EE21B525BF52A3F23C0FE5383A5565A19361D716F508C
AAB78411CA5A4D27552CC1C435760D5A89D535B71C593E755C616661363308DA
A683F54ED0C23FB2C225A008392B0B719F66F11A946A090B7C00B662A3C69599
B4ECB0CC70C85C4BBBF207E0026F6C7A19F2ACFB7A60804FC98A4BFFD7BFFF2B
9529E6D9D4238002BBC255BC62959D6F3381FE06E0621B879D5FE5B541D45A1E
759A6E7DC32B1D1632368D09A97039DF255B6492B1B2B7E2C1434E8306ECA7D3
5A79B6D614B4979F10988BC76ED53A5F45315CD7DA216221F842FD0F3E050DD2
BAC23C984D506D8F7D614BCB6B244F5F41321549BB0BD041FBF3053307168680
3435E9C9445A59A7C666418C4F2512C32058B1CE1EA46C3D8A5A66334402F742
CA80E92B9C7BA441DFA2F2FCD23D4DC0FA8084CCECF8B0630DC2827BCF40A54E
21116B8721FC1220DB12215E5EFD7B9964D83438042283A09017D951F4311601
88906617C9CE3A8E05018BEC2A7DB74ED5C45FAA46456587893AFAB3B79A5336
544552817A3B594BB924EE60DC5D09633DA84660F563FD87A8E60090A7539B34
135329A674EC3C46C38FB07E9B0E3A344314E8E3545F8ACF0F3F979303A301AB
78ED894413574B71A3F2F4050BF7818ACAE3586EE981A29829A053C9BE78E1A9
C2398426B41790E4B87ABB0BB96653C5FBA325F4C06D3ADA1BA577702557AC5B
1CD2717D7A1C8E74E00580FF6A8D39CDD33882FBAC665385906AE86BBD9B6F2D
238DDD2D8E6298DE43D32AC88C7B4EC5316FBF412051FBBD97415F6A9EDD48A6
833A4D0EB4EF1544D2C6998D23520E419838B689ED50F2DBF145BA629946DF3B
6788F7CF1054BC1683523C58F81D2DC61A0AF639D25968E8BC29D471A7FA2A70
4925590F6FB07C8AD2239EA9D48AC0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.1: CMR9 1.0
%%CreationDate: 1991 Aug 20 16:39:59
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 49 /one put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 104 /h put
dup 108 /l put
dup 110 /n put
dup 115 /s put
dup 117 /u put
readonly def
/FontBBox{-39 -250 1036 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FADB679CF58BAFDD3E51DFDD314B91A605515D729EE20C42505FD4E0835
3C9D365B14C003BC6DD352F0228A8C161F172D2551CD1C67CD0B1B21DED53203
046FAFF9B1129167921DD82C5964F9DDDFE0D2686875BD075FC81831A941F20E
C5CD90040A092E559F6D1D3B0E9BB71733595AE0EA6093F986377A96060BF12A
A1B525CD9FA741FE051DD54A32BECD55A868DD63119A4370F8322CCBEC889BC2
A723CB4015FC4AA90AE873EA14DE13382CA9CF0D8DFB65F0ABEDFD9A64BB3F4D
731E2E1C9A1789228FF44116230A70C339C9819676022AB31B5C9C589AE9094B
09882051AD4637C1710D93E8DD117B4E7B478493B91EA6306FDB3FA6D738AAB1
49FBB21A00AC2A999C21445DE3177F21D8B6AAB33869C882613EA6B5EC56476B
5634181ECBF03BFEDB57F079EACE3B334F6F384BDF9D70AEBD592C8ECF21378B
54A8B5DBF7CB9282E16AA517E14843909339B5E7C55B038BF3BB493F3B884A1C
C25F9E8FB912CBE23199AD9D2C3E573727701BA301526C66C3617B9514D6F11F
11930B1D97C17816C85B1BFD9B973A191B33CC3B391815AD14F1CBE935942AEC
D4004E6BEF379066FD72209DC88D2E634E79BCC2B98C766CBD92C561F2703F8A
109E6C6CEC7B866F2FC7ADF646BF492E520319F3B949AB5D84AE990B33344A40
3971F58DFDF8D8D67FA0B8F2A0D884F8C09A5A721319B911DBA0A35903877343
C37BC36C5EB32353272D1E6ED5FCA611BE319A7E1E842CB7576E7F57C4F43525
58BBDDBF843D36F01726CADD8F200C06682EA442DA5AB9F38F178C3FA104D19D
C8EF31DA0D57CAC11D770B11C4EE619C96FC72E2054CE903000EA2FA95EE0D4D
174B7B83BE37915CF2430A40F339A1F0DBD6021A09D85718B3F15CEF2F2F2CA2
B330E6253D2E9FCA046B5A7A9C0B8B7BD71F03E2065EBB0013DBCF44D984BA58
118F1A7D62C35FECEC4151862F0AFB77C80B865AF17F2017E8D751B13A001F2E
516DCDBC4BF94C1B8143F544A691CDE52EF42BAA078DC8D881640023552743EA
51BE69EB429EB08F09FA702456C8CE9335BCD5062C4E86955C8A42461693B2A4
F1BD5BBEAFBF3A52C7373070DC6A4C18E0B0B492FBA0485D35C5D3C217A2FD45
C8B15DC1CDEC91365CAA2B5FD02AB5C7AFF76E4199C0F6E5AF179CAE79FFD19E
37F005877B5E3DCA685BEEB537D5AA3574D3F40DCAE8F0EBCCA6EECC166C3D7D
2127B1758FA52055FA3AECCE7CCF3D8D2BE3C9314FFF15E76B571F85FD929368
E5866B367D5EF48505E27F918DED6C44A21D0E10C3B3741513F6C1C4F8CA70A8
0DC02D2ED6B11302B146E6DA89D45B65673BD49984EB502990FA5F9F389F6111
8871FEE64B4CA6E2C411A41EE08E4D1B8CF9E0251D99ADBC5592EC906FFC16A1
5D20171342B10A2A95F7C3EDE5FD5F357404FA956DB16113A0461EA44CBB8CED
C237B237949B299E72B59ACD4044D2EF962DD27C335C44CD8B68F0FFCFA613AB
C1A71EA7006EAABBF392A429D330537773A9887767E8AC8C3E1CB518B7BCE5BF
CC0F72965F71977327C5F03EDDA61A014114525038087CFC69640BE339C8C980
93746ECF560A7CF9ABA6F9CD1243B6EA156B6F2E1D189F56CC2C14DF3E333CE1
D1702A9DF68E1083433D99416255D34FCA50AF5C72A455815A045274AFE4A52A
A6A1B16BA63BA8EC142AC5213177964449C9566EBD1A9E0F7E766ED66907AFD3
3723AC728C19E3C7064F79FDC1652E8BCE08FCBA2D9E67E6C8A206875659EE35
721DC3BC04EDBEF099DB1FD41B3E7EE02407356D2B210F5B1048ABA47105DC4A
56247813617104C2AC3D1EEF4441AB1E0579A28DC9EA3A91670831AFC73DC358
32279663AA960AE8BEFA277A85576BC8AC3171C3FADDB86B0FD525D0C066E410
D6D3D84316E1438A0991A9CDCD0994D7B33B65A729FBC08589D53447FBBB6D0F
F50988C9864DBF8374CE8A4FCBE6A268E726331BB742B1D04D509151D2C2AE8C
15455FDE583548E3B9A56553189CD9E1CE87E111D105D8CA7CFA2FC6FAA2FBCE
983A8CF5F2DFCFB2FD51B5954CE1A174DBD5DFFB33A08CDBCFADFA6830B6B067
587C76539402BC097970BF53910779B263845935855FFC2EA833A8F1DD6C6B56
AE795A80785BC03929F2533BDB3F87A8B0C88CB193D2E94E3B6DC851805B0862
9C2DDA39CEE63BAFE30DC9BB39F7DBAB59C5C5CBD889DFEA77EE7CB286798593
C655D06AAC4C2F4B6C747896795C8468F3AB8BE353DD09B0E0DC2A3607E1D37B
B22D2563FD63FF8A93095217029638B88C0B324D7E16062E949182CF90E57B7D
23C1623EA30B6D442A8036D7E81E70D323E0A8F736C0C65F9919199AB7E7A969
C4B7E7AB2912D1A9F6961C8368BDA7F929884DF712AE88FE02249F77016367AD
C377E05AF5CB3785C1BA89FE631E12CC58CBCFB081EFE6AD9443DE549FDD744A
75B2F7FB6D499443CA37B8C8B1BD5B467CB06AA45544C8DB2DC060BB9B1AFA4E
3AED8F1787BB788D55B7FA40BF735112676D8CCF41096DDDEC3A8F817ADE07F4
C4545FAE355AD1324AE3C655A4215FDC16DEA7B251229470BEECDF624551C139
D6C33A03D4444139D18452086B995BCB65273838EA71A1D53CDEEF7F71745207
62EC7CC6BBE8CA4E64CAA5688D9BF506C84B83BDEF2E08F6A0F66A9A55192498
4B4AB80C010C2FAE1773A49F71FE78413DC56580F08923E6807904D39DE68248
3A2D2DDDF56A3965C8C507CF3D83D728419C64277A9A927B3E1872B74DEF42E1
D142AAA9F90223DDA2819B9AD18C91ECE12C779C872C1F25C082C0B3BF954947
CC70D9321DA3459B4DBB6ECAF512E1586E978ABC0D421D2B6211B2AD4AD88A30
11E0A827ADB5F2AFD2A0536AE035DBAB780B2D3E2E936B7A2E7F1B5A541C6A61
89476E2DDA86C94F60F05F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR5
%!PS-AdobeFont-1.1: CMR5 1.00B
%%CreationDate: 1992 Feb 19 19:55:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
readonly def
/FontBBox{-341 -250 1304 965}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA1F9B0FF4CFF25B8E64D0747A3
7CAD14E0DBA3E3CA95F10F24B7D5D75451845F1FB7221D7794A860756CFBB3E7
704A52A22448C34812C3DBEDD41892577AABA7D555E9298C1A0F7DA638078167
F56E29672683C51CF1C003764A8E7AD9D8ADE77B4983F56FE2D12723AAD8BF36
682CFBB71B1D12210144D39DD841A971F71DB82AC6CD815987CDCF29ABC3CC96
5EEBD5D661F452C6E0C74F9ED8D0C5B3755551A172E0FE31EA02344176E32666
14B6853A1C303A5E818C2E455A6CF8FC9A66DC6E279101D61C523BD9DB8EB82F
EAF4D7FDF6372383C0794C4568D079648689A199D4B65BA646CF95B7647E4BEC
83856C27A8EF177B3A686EDA6354FE9573E123C12EC4BA56A7E8BFB8F9B75147
9DD79A743968F36F7D0D479FA610F0816E6267E5CE327686A5485AB72201525C
FB3B7CA10E1BF26E44C24E1696CB089CB0055BD692C89B237CF269F77A31DC81
0F4B75C8400ABCFDCEC6443CD0E81871CD71AA3064ABDE882C4C52322C27FA8B
41C689F827FB0F8AAF8022CF3C1F41C0B45601190C1328831857CBF9B1E7D1AA
246117E56D6B7938488055F4E63E2A1C8D57C17D213729C68349FEC2C3466F41
171E00413D39DF1F67BC15912F30775AFDF7FB3312587E20A68CF77AD3906040
842D63C45E19278622DD228C18ABDD024DD9613CDC0B109095DB0ADC3A3C0CB5
AB597D490189EA81239E39202CBC7A829EB9B313A8F962F7879D374ADF529BD0
5533EF977142F647AD2F5975BA7E340419116099B19ACCCC37C5512599441893
4BB8166C90763910DBD81A48165798C072DB4EFB12A003DE185EC8DA0975B616
DC461B2F25044D4281673031D5965447DDB56FF0A36265C4AB054CA9B823CC13
6EBB9E3ECC48ECEAF586E5455667DEFCDC4FD44B54BDAAE5CF12C75303FF9182
68095966BA066ECE1A94BC152C1941FA99CFB7E76D338913F7B8DC9511A5388D
CE37AA9865DDEA5F47CC724E4511CD46C4BBC7DD7FE722FFBED6163407CD37E5
B5235B4A7E8D035689CAFAE7B285E5DE419CE5DEFEDE30A84679457E3409B8CF
5FB9AFA7FE52F21DF15D3C9154BF3BB2C685C686D7399382D5552D4E68F16621
B7E48419AD107DA8B9C76D119DC27286DD487DB321EF2A6CEEA68C9C09865F4F
9A00AB335BA08B3500067B209C1B444E34C5476A58BBCEF59690D1EF1A3F6CBA
2840F385F08BBC60B5B56A7C78800712E83CFE696C3B0C1E56CE7464C918F5A1
F942301035902160F7EFA27E147F531DFAF16600B20EF00BD593DEC38CB025BB
B499346ED04A5114EBD58E51D71F8B1FC005FC0A802930D1090D4ED11F07CA5E
F613353AD9A84FA7023CEE5E8D9535479475C32CE36FECBFAB07D0FEC10A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI5
%!PS-AdobeFont-1.1: CMMI5 1.100
%%CreationDate: 1996 Aug 02 08:21:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 78 /N put
dup 112 /p put
dup 116 /t put
readonly def
/FontBBox{37 -250 1349 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA06DA87FC7163A5A2A756A598FAB07633
89DE8BB201D5DB4627484A80A431B6AFDBBBF23D4157D4AFE17E6B1C853DD417
25F84CD55402AB88AB7EEFDEDBF2C2C731BD25567C53B474CCF739188A930039
098A197F9C4BE7594D79442B2C8A67447DE44698321145D7689B91EF235EA80E
B600AA8E238064F154284096C4C2554EFE8DDF13AFF8D3CE30E0999375C0FEE6
F992DEA5FC3897E2CC8B7A90238E61E41622DE80F438DD994C73275CC52249D9
F6686F87F394FB7BB668138B210BEC9E46415A1B58C990B81E7D7DD301143517
4C2A259D2A0A1E200F8101469C10D7D537B0D4D39296A9AB3F132DA9A3B459B0
F850E2B3A03BDCB35AEF82285D19C38F474FB414F8EC971B994D1C7DD753B271
2B71549DF497C665DF0F266988209D9EB616E4D9BA229FF984E7A886DB01FD21
48ED2E4859FD6416C2CE52537464EA884C8C9C2D1083E2B83BE4B766474C23B6
6E8EC5003200AB10514BB44D14CA700416AB6B2683E80862E7D5B49A05526A32
554BB23AB8B0824BBA198E3825CE82380CC0FECF46651E3E5D77F09465E73164
20342822F29572BC7F73F2C3BF95ED3BB6FDEADC20C6AC866C4F2C679594D7E8
8D944704A3C5D771DC39503BECAB89F34D8CDB8FDB91AFE21F3F0260D05E90C5
73E2C13DFA022C4522E5918EE25038A0498FBB530DA33B0AE238B1C6ED03FC04
2BFED8236E07820C5BAB411EAE1B31D93A2FA7C374B1725FEC359ABCB88E2C89
214529A263D795AACB0B95A3AB2F4E08EF350C282CE521716DBB06E5B8291B3F
5D4ACA230FA192F64BC902A4C8842C0F916F92FBD002ADD408BF0401D0284FBB
F05D4C6DB631420747CC902C5E1617E6573612FB26C8378DF41FFB5048D3CF06
4893DBA48EF4B043D760F60C75712169D16C83EE020C45369E443E853E1809DD
F395B812067D6FDBD26111B34F42C21036AF952D0D767FD17F6959D9FDD46005
D64FFF54772B50BB9B173AE79702981F58F9F235C591F476A31852174DF0619C
A470359153DC32610E782B204E7945515464DACE9099B81EEECC7EBD4B5126AF
C3FD9DDFB329AF1C95C41FA4A5F6958869509A23BD7210386329771FA46FF926
0E54AC35106253EE140449425A8670E1F92B178A02A58EB57540F4BD8110E548
BB584EA6D625C5F5FE0124A98E49915F1A1B95D2125874360EED1C4379FEF3C6
90E5780C20309F11F2F23FAD635C44BA030B39EFF083A3ECCDD2641DCA8AF5D3
38B381954F72A516C2992AB4AE55DB13459C382FA271BEC78C525EC305C4542E
7C62BEC8B57EB6156011571307A2C4656EDD0DAC057B64820B25B34B6369C88C
340E7B542454A26273CE90C94073F4FF283BE66A11CC9665821728D2CC19D9B7
42454F733E9EF9BA06A14565A9B124595148A6872AFB2D13D6BDBC1F0BC4A4A2
5B853C82798EACD6DB64837EE20DF686162E0D14C6F6E5667F02EFBF9345E665
E53D53B745619AF23162245E74A21FD7B8CA5311ECA1DD97DF954AAFBC8DB2FA
B74BF11A0E1434B7D2BC00F036D222D5DE917A1265DE62A0BFEFD6A0D42D9326
7CC9DCC998287561C6DADAFA2C024B988EC43C2BF9E70752CC5F5BD794F0B894
1CFA648C38A01A8741E8195AEC37C4EC88C5FAB8BECA6E4270E3DC1054330F35
15E5F1CD8AE65DD8C10563209969A9A04EB4E28BC05427B41F23986A73D0EA0B
4277F514AEF7DA5700F0AC9CC25CF6C61F238889F05F52FF04C892D1345152A8
C144EFD119E78FB6C959CC56DA18012692ED01B58CB7487531881C586BF1AA8C
B2EBBEC9B1E6CF543814D30A56E72F2C70D4BB78CF3AA2BCF8B783DCD100CAFB
DBC7EB4576D57300769211AADC15E2B0164CFDB5280C8D0B5CB224AB45A509A0
4B3784E7C48554D8051ADF21F0C77378756057DD6A82E0F96AD99C29472D7EC4
D1C704734C5D9E5CCAEC72F5678AFCBB1CB21082FA6D8359AA9C1D4D1690076C
221904F72F5D5FA4DD26FE709FA17465FD1F8FFCACDAF0A6501C78A48A2AFA31
9EE1209C0D9F21308983003AEAA773A500ECC3EFE6D9974996D596561400267D
2A1767E336F05832997436843A09AE7A599F7D469B3D989BDB407AF405B5956B
D11015C187E1110DFB25AB6BC4BAFBAB3A87C4008D6105A74F074B3E30F467A0
B92144B7A6AB4AE52A96123387FC51E62FE7E07285AEF56A06D407C21CA90AC8
07271A90E7F3FE7EE1A89434B3274FC582A403985C9B74B17E58BE387163E8C5
370D8619BE0E9F06147BAC0B6FD2695EAECC72E76DBE6E8AE83799EA9057A9AC
7984FA32140A25A42474EB358730D750D7D1EA32C4867CF4C020F20973DDA62A
B80B54FA5F505825B0A92D3FC4455114282822A5ECB44A17F39B4E4E5BB20D95
19345FAC3E6A164A3EF4B92A6A06963E8F53182435AC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 46 /period put
dup 70 /F put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 88 /X put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B283796A9AD847424B4E6508546C36223A3B17EB82A56592F27FC27
F1D49D5FF4BBC0E16231807AF7E195AA7D0D01C7566243448B222D57B811EAE6
DE9370F84E207DC9BEC731AD6040FD9B804FA14CA264B73136F9AF34390319F6
A543D5D4D7FDDDF2F76651E557683614521110DEC1CCAC426117DDA7D6CF1B8B
7879B21FDC78BAB3C944BCDCD6A65B67F3692F0A8D5E36FB783A63D4FBC9842E
2CBC2720A7206F42A99AEC79FBBA92A27965AF40A71E05E4BA8D7FC58C828491
84A8EBDB90B1167333987F7D42A76E9C5C5A842EF91A19C55CCA6ADEB88B59E2
4FE4A96A8CFF51A1BEC1F1A6A1A5A5BFB54A1BE8C704194D72A79D33F099107F
153E3FFC70BED6D04DB4820FDAC002428C6741B91D8206296D827D3171351E85
39BB0DF1C2457E876D3A2E7E499D9D4104762FD19BA0526D38D2BF751EC56EB5
C80EE2A7AAF2CA12D1EB4548266CE8C0D2F93158A6728EB552FA09202865142F
E8D1300D637E64C338DCAE28398846CB3752FA92F87103C231C0D072E20D0E00
0DBE4A0656BE7F021DB863F63DE61262287F80AED877680264DA37ED728AE374
401C3D79E4BB7381816551935484A468B163A4D6EFB0E6FA0627AA29538A2D7E
C749F54F6F22F82EDA7807B911C001B523AA1142BD9B1BDB292EADD055C97A17
D78522A27D510E63B5C9855D0A6BFBD5071B4A5AB3AD8E88B79FA6918B5C3BFA
49B51BEE7F3A5CC2E80A8D41D1603ED3A2FD8610888BAB22213529C52CD8858A
97484DC311E978A7AF3DBDE05D5DC644FCC9C73820477B5D9DC36B51A134035C
D0741486E27801551575E3BD0720D07F76CC99549699C96CFB69C19BA9934239
9568068432F2E87CF033007CE07A10731B3C50BA474FD208ACF0F9FC4AC97928
23F72BAA23F39C7E68A73054E611C26941F05AD5D0A63FE18680403F850FA4B8
82489B52679DB1FAE22EE3B71C15AB7BE34C50128DFE49F75A1FEA7FB038BD30
EB76410FFF6EEA97ABA77249B5BF8647CE6137FFD9EE535C816D67710E56219E
CB931EAF05E56E422A2B7ED33E55A26FB1A37102CBD4D7371DA6B6F1E19D837A
E75583D2875853A16AC308B15A58DDCAC12DC84E8D264038FDB5F7073BA681C3
66E584206534A995AE9DCD3943192263FAF831B150E965A9C58CB39775D46022
6F20388BBF95B3342044FBBB837D648A782D4F27AA9A32EED5B8335FCB0C3783
50412E941536CFD9CB3B26CB5F05EC5DD181996997F57FCBF85865A934F66677
EEAF2604958688BFD6D2D3A4DDC4681B41A25367E3116A7C276B176E1E8363BE
7EF6FE3C759702C27F9B0DFEC2B558A8ED647B537EF79AB18F73E6D58671131D
67806219420BB9EE15321022202B56C3F5FC22A868EC0D50597ECA1223986026
C7FC52F449A02BF23DB70E2893643B49F7264F4A7B559F568893C5808208B257
792A990EE6A7A88F6045E408B5595F14C54683F610BD8C28E8A2BD21A37346DB
53241D4BB754CBC1A277BC46A8A4BB0BED343295A0F3D8BFDB538C46AC6D0C3B
95D01ED9EC5DBBC6E344BD05A328F8FE425A969121A03C07D9C7A87FE6ABD70E
6985C52A24A65B80C3C3D5C336B399ADC33F61E8668C81D513704492AFF2AF64
55769EE1A9ABDC81D75D91EE77BAD3E6007DF2FC7750460469201D7951B304D1
B6378A3CF36E60DB203B183B1C76086F17C5081CDEFBC7F2B18F7F3DB4F4F47E
304668887A0F450A86597ADF6B1390636C753FA06F27CE4E8EE4404F9674AB11
17B0F8463FD25A8000192B2BFB92B4FE4D935F62557408BBE2834450FA7924F8
9731BBF6A6D31A31DCC0A6C654F8E14FC0F2E17489583A4ED391F194C329C0A0
8C568A14BCFB5B14E3013E80D4CE75B4CBB557F7170929EF32044C4FF95A3D3C
7FFDD2A2F3FAF62B42484125D6FF859EE4BDC534B200EC7F76DC62536CCAE043
90AAF87B13894D5A0F1A8C145DF16E63A309A898C1CC05DCB3F78BEDFAA30168
D27FFBC2263B45272A0D744E4D01F393E0FED4D926DE21BF61E89DFA754B0F61
35A80C1F22563266A59FF85F39AFF075E173BF6160AEA8F16174FB86EBED1D20
8FA25C63A02CF97FE3E9BDB5EE20078C5C5878532FE421CFC16B0FB277057483
9E2E719705AC7853A1C509B1155A75C109D989EB7CB996387D83DF6CDC728D60
89A53EAEE47AECE66D271C7D9994AECEBA65429040DC2668EE7565A54BE85C6C
477BB5D10ACB70440B2E1F3D93C50D28769E62B88A15EC67F67335C55185B1D9
80A2C5AE5AA175289DB25F654126223A8D8396DA0E724AA7D96F9643A173E08F
0E7114E13D53CB6DFB0BBD70050FBD832E3975AF8C738E03956A3B90C520B05A
173AB96C24337A3DAB6C51CB5C09B7A3629247E130DA3BAF82E37892E3851120
801A63C69AC73B582C0E47352A6E5F056B10CE68FDF1558CC06A91B7DDDA2808
0BEBA2B940366C2FAE480AC73A69BB5F11A603218A01DED34CF5A76200A1FD41
30881A7CF39739C22AC38814A205F7E4C0E5061E246FC45465BEF4935CEA8E86
2C131D365B944A717B392E166F983AC51346CEFA237ED8E05B4A8CEBA6BD468B
CC82A60B92171CEB1EC7A42E4F3FB228BAFC6E78DD0A7EA6BC44F8ACD08CA67D
1932121AB6F2798A521DA51B57C6AA8D0600C6B9B53A70B3A60161480DCD7DBC
BFC1C9631C6B9A44CA89776F192B4FACA4825B2A7F95ACC9975FA8479AC21164
D239AB67E946DBED563341790907DBA08787EE9DAAD3E49A527A977ED4C72FEA
BC3990F567FC48A62E3CEB6C975486553B162C19F24C730583EAC01DB0E56BAA
AB98A159ED05B605CED6CC5F24F34AA2541F33F95B2C934A6FB274457C12203E
A11478C99D30ECAAEA5B41C9D260E0FE20ABF86566C1049360CDA0BA0B669F15
C53AB34FEB879033BD8578805371A12F4727E8438E538269DECFFBE6D7FDD151
F8A487E391736D48E05EABDEB8D3D280213447764541D8E311D89E1B60BAEC80
433FF6A4F18E4C55B9D235B6742DE8682CE155B81E49FF6243B3940E701615BD
345A69FFD3EF69DCA5F0324D96BC9A7AE2E311136208A1181B3FD1673A3CD902
41779AAB649F56837EF09DEC42C74A49381A0C8441BB54B9C3B5839CB1B87E27
4AFB3EE50007EB62760D63FAD4C1D27A9129779F50A864F8C89898B447A8AEEC
BE841C0BB46D70EB1C78C47934E220C7E8C0CC7A3D9B457AFF97FCBED9639912
B2EEE1F12FC26F2EF91F0DB1864E562EEA280A78EF16EE76394D841B9D27749C
F14BE9514A78D55D05C1454D5EE774BABEA71CCDFEA5D3B1948AF3E0D9E8B20B
A4046C472E0313BD49C6253C1D3A822F3EEE4588063663083E008794637B6F82
28F71F7E677AF50E532522F1085E46CF2EAAC6F1C6B9022116958C5F122494A8
9E06E3B6734605DD7836F85A27325A7A229315175636CDF82F9F72C86990D09C
DA6C6A39BC9A43D290199720B05E8B39C1C80A6753F5AA5631847A95F56426B6
BCF9AE9DF5925E96F31F55DF7B497F458D0C150155E3C8B7BEA747D0DBC7C913
EB6D9557B0879BBDC389FE986E3960CED2E996FA6CA0A9D3E0C2F1B07BA9E05D
17E3584672F1B4393F5A3049E2088F9F05CC57637CE6FFABFC7970A5C68BCFE7
9B0B7562F4AAB97D035A9C8066F194EAA4C17D3CEB8843E55CA732371B49AF34
196AD3C4D0C61246BA01BF86DFBA84209ABFEF0614E94656A519C5820BA6DF83
C6BF413509D7F160E95B6D0DE00EFE8409598E97BDB70877526DF1DFA1D1E76C
00FFC8E67F94FF293E7341A785847011F66531040B0E48FB67D25BD7F8A6177C
3C3C71AA85FDA35E77DB6260CCF4884A36749E92AF73D7FAA7E8BAF221110C12
F65BDD9108F330E50E2C00882230B50FB87FB7A6163041C8058079B90BF36453
079189525C26CB95B7FF787CA4DA600B8129AA7343114640C6C72E0027A8B0EC
A293935030A5200F3782B34437E3710D72F455C6C8BA23697F0A412B27E0A784
9A6514BCF60EFFEAAB23026EF963EA59B47C92D865CE456C2D035679108638F7
02998468F766C59FADE6162A9191AE63E13E1967579279D9EB48822D22EDFD05
DC4CC8CC849752F63D7A92C036E182FAA2316796D3C8B70C41A1673B9DAF99D9
D7D01FD040FF57AFC840060C49E574CEE9EAAAEE3EECEED9632F3C91D8AA67C1
FA79EB1F7710D5D08330708DB173A59C69A5D682678E8DAE978E4928DE732F70
BC34CCC764B0B32D17362E62283503E8859C3CF7056ACF6E38FF7DC2A45BE858
1CFD7ACC36A9D3D41521A3792E0B890CDC543FEF7E7F602D9C3A479AE30E7CCA
3C177D186C8420A01DF3B31AA56A5677CF63B50EBBEA737E875A8E67D9F7FA38
F891335E2112E3D87BD648A198F58185DEEA66FE683F9EA2A13FAA5F78BF5815
4EF46275C3715F9D5A0CEC17D1B56D46C087F69AECA446F2A52AF24757E6F90D
C4798C4A25B8E66C143AB65E51ED8593E0BB87C4182C4A567C70A0036D838242
4E59589259B7AFE5EEBF27BAC5C8BA4DAA383361D230A9BCFDBF365679D86C5D
FC325E9222BDBDED96EE6323145356B3FC0A1A54D201268E3CAEE333A8A47CA1
495F1FDC3598FF57F326156797118FC3E2571A2CB5309C0C52461ADB822DC36F
F34CB700B6F25440687D47944E638753B9F7212177DAF906CF60BA52C568EC55
63215DFE6D996A22D054F2F55C4A92738C6121720780F2C3BB9533498CDEFD23
ECB2B3A98EFF0EF7AC25C4C43C5BD35D59BD2C506A810B03A848C37B1E7B83A9
6B7A734B05808FA8D4D552BA96A51FD3083DDC4C0F9C44AE0AD7F88742FB159F
E0C65741202219D9E2E071C9E505A39195760D663BC07B9D6687117634A6D39F
1D2182832AC98E768B01115C92394E71209E70D803DAA91A6971678EE6B0A685
5D13D333A996A9AB968A4C008A1E79263E219A8F8C8AEDFBD556F55EE4493A8F
C2BB2F9BFA6D53E63269876A96E8A479649DBC5FAD2C12773CD81E6E5B50C9F7
C53722E104E0C059025A8F78A45E4C929132D059CD168196E178460E2329CB23
8F645C647C7DBD2D88E6F3E82111E1120EDB29FC20EC122BD52F3423161886FC
623DFD7D0BA3797FD474F1597E93BFB4245FEE7828D27061E5FA1F8019DF7096
F84C89B79873166DEAC4BB344A34FEAE3CD78D09DBB46BAC80DD5C15BD03E333
F4B1CCFDD72EF47C429C2C1C46177193BEEFCD266469F29C355C1BB976673D73
CF5F5C51D909DE1E269252CACCAD8CA5EE81C469CB9D912C796424417EA6042D
E18BE490329D71AB2C191D8900CFEA70094A5ED9BA16FA475DC7E88CE19B421A
F69A832AD7B1498809B61484994F07C9865934C010CA37E752590072794D278D
1B4A45A4109640A58DDA31AD74B084503899F8F461143D9EF47938044AB1C5FF
3DF4193EE15CF7D6082CEF6BF2B52083CD934F61E6481A9B8593997F152CB284
4261BD5EC6E1CA7B36B8B7D1DECAABE73EDECBABC001939A6CDD855A1E7A79E5
04BDCE91307E31AA748103CD1D12F1EF945E99BAA4881EFC12990728D36EF63A
C1277297569F2BA638D47C7AF76BFF0991DC522392CC60182EE76B67EF18415E
D561B4F56025F7415D0D12EA986C374E63B1D647E7A3CEC28729D847045C24A2
AC45F11839BC58579E4380CBD5DDA639B081CD84D5F19572CA1170C24A86CA5A
C31B788AB1AEE63251E023CD1763AD0ED93DAC4A34A35847AC91AB17697F3DD1
148A868B4A2DAA6EBB99DCDE7ED0C16439AE181B411D86D061FD901AAB5EEAF4
704194579D7095F3EB1032EE5958F199D71CC289D85844E9CF76312AF8B5D489
1E83CE55B7B73A362D87A46CCA66F1B8396D5106C76E6A05807B5FC2CF042497
B9017606CBF93A3159DBFA351AA658997A94D155B696008AE1E8FD134EEB03A0
C89B7D029B63E33A39D7999F62CEF50D772DD86D066C1020539D94DAA1307A3F
9BDD62B48B5C16624FA45543FFF5C772DF2FF218AC5283A2C8FF55729ED56E42
2144BBD391E66F4E0444C1F123C0645E1523BF5EA65EE28E571BB69E2B8506B2
D2D83CE5E9279EF71A74CB080E1B2BAA9BA44DDC9B03E1DFFF962870340B30A0
13822A21397091C08CCA84D069FF4BB8726226D6A62860AF5E9AD5A24C883FB5
AA0DAFA7A65237C6D5C263240E76366EFAA380AA5C6B30D400915DBB97D61553
B76971C4D1D4D0BBC573F982D99126FF4DD7FD214F3A1D03B7FA88F50C2AAD2B
6FB8A7C960E7658A8D30B59FBEC444A4C9B6695BAD97B77A8B7EEA9C7166FC9F
B6BAF86626165F165882D18285415F834117A9CE3D1CB1C5A1EF51FBC872501A
6D5C8DB511D309AD2CAA880C606DF8D6B8F1BAD0A1F9C1E91602CA6B53804E9B
84207DFC30E0CB0447DCE803D203C955B5EC888E868D4C78D74C8C9F39BCAF28
EB0C9D9D4443D216E0470465C2DB8D562DB12B07CA68F6AC410A90A94964BF33
DBEA5CE228327737DE08A35522CA25886B2132CC097A62BCB2BF4F2FEEB08603
11E292F2C573D4C6FFC412BCEA7FB1DE157E538702499C6564E98CF654E18237
25CCB19C802C807797FA1257AA1F19D0216C4410B3601E369C1A4E5015BF52FD
2AE964922A3C1B88DCE370E80DA2FC2BBC985A73E0DD1AC7A346958BA747FB67
B1AB0F0EB7F599B520FC06BCD1564700A08F655B09098D2B3AF7A4BF8828CBCF
349DC33A5ACE3401222D16C8EFE18CE6B7ABAC7735DA7EBBCB0CE17EE83063C1
90075116C09F467200B13F976663E83A5646915CD12686AE6BEAE3A1DC7E704A
0B060097F2C714EB0651306975622DB754C2D1A24230C662813D9529000B6465
9E0CBE9B91A50EB58C05298D564DED8805CD63F261E33423BDF60107794E61D1
8490569B1F4FFC07F1B25F79A5FD56E2ED72E5CE0F7F121D78BD41753A9F4ED7
8D75844526588686C9CA5CF2A3317FF73D78DA5212E5D116F04A059F87B76365
BE41154E4C262B7F0813CF6270EF5AC4D56451183BA4732BBD86AA0FDF1FFA84
9DC7EFA0771A6071D9C3CC78C68BE3973E1D8986BBBF3FE055CF0D1DECC4CEFC
73F3BE5709A20734522B266CF63CADA5BB97A35EC922E44466ED2759399D88C6
D426B8723387AD7D4826532F5912DEF9CDE435854E32D5B59A146AA0F1940DAF
0A4EEA97466D8F68DD068D09566AB672082D2F274F0593E3C22BD6B49EEB76E8
2BD4582ADAF53F2DD488A6D654FC9E6DD01F2BB12FBABA27A71B840DCD6C1A0B
1C1AE749C76C1697BE0902F8C4CFBAB1AC062377D1B6CABD9C1FC9B0B5841FF6
FDCFA71E4A944166F324F1F217E0FEB2E0F5AD931BB2A92CF77AAA03B058977A
844A569E4B78B8730EBE5E25918B7B01856ABEFC5DE9EC1C316DBAEA30472037
FACD37A92071A84A09541E2186B81D202F1C06DD36B48C575378BDEDE2AA1059
3F25F2B7F6F77E2F6392C57F90E5710FD289A1C60FAE72F0B02171E0F60512B2
291523D402EEA0EC09677ACAFC88C0A513888ECED804C647906836FE549536DF
7AC31D24AEB2FEC7DA11EF14B6DED272596B008FFF8E2C6D8A8D8D8BC0026E31
B6BB42B29BDD5B20A01161BB67AEB08A34B55A9CBA80C775E0468E90C0DD65D0
4A1082574EA280E07AF4BFE29095396EA525B6A58E090BD8205DF0A7AC6B48F0
856698CAB93EF5D3B2CA7B03F83FA70DEB4F66D491CE822365147A6E990712B0
CC1420144C79D0E537CFE01C624FDF379C5392CBCD6BD6B506777A559901F1D9
1609ED95CF094E84C0A1EAD42B278545FF9C2049FDCFC13183716723F09771ED
0809B5D6051CE3A375C4ED741C643DF4553996B2D79BDA7587453B0AEEE1CFB1
48C7AA6F752F519899FE89AE315AF4FD754FDFBD16ECD89E9CE894050C0FA687
4AEE3306AC05205757AF934761A80E47A8E9D4E10FB37539D48D99C9F9D7EEFA
7509B5826BDEB96F583D7C9D499C18E227D730C830488B423285ECCE3D6A633C
FEF3942BA32520F0436935A0ED436D9E3FFD8061F1D70210A63C76B0FF846A33
D5670DB9035D9C0246B3715B8A63FE61D5FB784072FC48AAF647BE6063440644
5E193C94390AEAE983703F6DD7F2BEDD95708D3DF8F33AEF47838D3C270F5200
5C6D46BB5D567E4E8CC8D823935EC633CCD82122D91E35A46E9E7F10D231A142
DCBE03CFF756969A7B66ABF525FFD646318662ED85AC207CB4370AB327E45BA8
08B9B8F1C75A2B059A8D8217902D5A28773A3C37D206BA6B6B02E7254291031B
DE08A15B6D55AE698FEEF2C3F10BA87BE304FB8EB72556C6E5031395DE0FCAB1
2704EF6639E675047A7E00DED0FEFA31558E3318C31E406411E0FB1395139E03
766D124B11DB5D4E4BD2C795B74965662469002828D7952EF2232BA46679C107
8DF9EFA81DDCE891104A3B66118A5154DD517701383A45ED01FBBA1B02EFD0A4
7CD2D3BE923A775EA331441591606D6E5F93304D54D80D6E8CD48AE18766AE32
DFA30730B64BB9868298882C0153C35EC2D33C955BE705D8E04FD309B0C48824
34F978BD619BAD96C803699CAF3511F41E5F7328C7C747DDA4E7723D387D9BD1
AC135FE624002425BE0B39C2803FEE9B90583C6A3CC111803C6C2DA3933733CA
8652C393D8CD168FABBC996CBBAFB71987123B21C0F1FE9391A967107981D146
3BCC39E4AA5A025012A03B8E66B97F5A75D5137605AAF3407FF91BC0B38AA2DC
B13541030D468E3034A6776C70541586D97037345BD9B44ED7CF2803D3761B83
55CE3F075E3FE772B3D14EA190C37BDA02E0DCB5BD1EBC8CBAF31F28EE117AE1
511468D23E06CC86A434D469F628FF7195EBAC492420F52586872C9138FB5DD0
D34228A19B93FB9AD3F3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 42013851 14324472 1000 600 600 (new) @start
/Fa 149[23 106[{}1 83.022 /CMSY10 rf /Fb 139[25 116[{}1
58.1154 /CMMI7 rf /Fc 205[33 50[{}1 58.1154 /CMR7 rf
/Fd 143[42 33[67 12[62 65[{}3 83.022 /CMMI10 rf /Fe 175[65
80[{}1 83.022 /CMBX10 rf /Ff 143[39 112[{}1 74.7198 /CMMI9
rf /Fg 138[43 1[30 4[43 1[21 3[43 2[34 1[34 1[38 47[38
3[26 45[{}10 74.7198 /CMR9 rf /Fh 205[28 28 49[{}2 41.511
/CMR5 rf /Fi 139[23 3[31 33[45 78[{}3 41.511 /CMMI5 rf
/Fj 134[44 44 1[44 46 32 33 33 1[46 42 46 69 23 2[23
46 42 25 37 46 37 46 42 3[23 1[23 2[62 3[60 46 61 1[57
2[76 6[54 23[23 2[65 43[{}32 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-595 1191 a
 tx@Dict begin CP CP translate 1.0  1.0  scale NET  end
 -595 1191 a -568 307 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  0. true 466.95 105.87332 421.99504 -26.14737 .5 Frame  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  0. true 404.35405 105.30414 361.10576 -26.14737 .5 Frame  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  0. true 342.32727 106.4425 284.28343 -25.5782 .5 Frame  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  0. true 272.33333 106.4425 214.85867 -26.14737 .5 Frame  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  0. true 200.6323 106.4425 143.15807 -26.71655 .5 Frame  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial 715 -73 a Fj(sym)n(b)r(ol)706
26 y(mapping)1315 -82 y(parallel)1287 47 y(con)n(v)n(erter)2473
-118 y(random)2492 -40 y(phase)2463 41 y(preco)r(der)3082
-128 y(to)3025 -38 y(serial)2955 57 y(con)n(v)n(erter)-568
307 y @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  0. true 328.66965 97.33742 295.6648 64.33212 .5 Frame  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  0. true 330.37717 27.91264 295.09561 -7.36845 .5 Frame  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial 1958 -321 a(SM)1934 231 y(SM)9085
-1233 y
 tx@Dict begin -180.0  RotBegin  end
 9085 -1233 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /Lineto /lineto load def false pop .5 11.38092 11.38092 0. 581.33014 87.0944 Triangle  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
9085 -1233 a
 tx@Dict begin RotEnd  end
 9085 -1233 a 9075 -775 a
 tx@Dict begin -180.0  RotBegin  end
 9075 -775 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /Lineto /lineto load def false pop .5 11.38092 10.81218 0. 580.76097 59.78001 Triangle  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial 9075 -775 a
 tx@Dict begin RotEnd  end
 9075 -775 a 9085
349 a
 tx@Dict begin -180.0  RotBegin  end
 9085 349 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /Lineto /lineto load def false pop .5 12.51927 9.67383 0. 581.33014 -7.36845 Triangle  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
9085 349 a
 tx@Dict begin RotEnd  end
 9085 349 a -568 307 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 581.33014 89.93985 581.33014 79.12767  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 580.76097 60.91794 580.76097 49.53702  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  0. true 229.24785 -52.24266 142.01971 -95.57214 .5 Frame  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial 682 990 a Fj(set)28 b(mapping)-182
-293 y(information)-93 -198 y(bits)-568 307 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  0. true 565.96585 105.87332 490.28145 -25.5782 .5 Frame  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 581.89932 79.12767 565.39668 79.12767  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 580.76097 49.53702 563.1204 49.53702  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 581.33014 -17.04272 565.39668 -17.61147  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 581.33014 -17.61147 581.33014 -5.0922  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  0. true 532.96057 62.05585 498.81737 27.91264 .5 Frame  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  0. true 557.42995 9.13417 499.38611 -9.07599 .5 Frame  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 214.85867 43.27737 200.06355 43.27737  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 295.6648 80.26602 272.33333 80.26602  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 295.6648 9.13417 272.33333 9.13417  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 499.38611 42.70819 466.95 42.70819  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 523.28674 -76.22404 221.68748 -76.22404  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 523.28674 -25.5782 523.28674 -76.22404  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 314.44327 -25.5782 313.87453 -76.79323  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 48.12558 43.27737 143.7268 43.27737  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 143.15807 43.84612 138.03635 48.39865  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 139.1747 38.72482 143.7268 42.70819  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 142.01971 -76.22404 137.46718 -70.53358  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 138.03635 -82.48369 142.5889 -77.3624  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 308.7528 -30.69992 313.87453 -25.00946  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 319.56499 -30.13074 315.01245 -25.00946  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 518.73419 -31.83784 523.85548 -25.00946  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 528.40802 -31.26909 523.85548 -25.00946  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 498.81737 43.27737 494.834 48.96783  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 495.97191 36.44856 498.81737 43.27737  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 422.56378 89.93985 403.78487 89.37068  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 422.56378 89.93985 416.30414 94.4924  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 416.87332 84.24939 422.56378 89.93985  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 420.2875 69.45384 404.35405 69.45384  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 421.99504 69.45384 417.4425 74.57513  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 418.58041 64.33212 421.99504 69.45384  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 421.99504 -15.33519 404.92322 -15.90437  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 421.99504 -15.33519 417.4425 -11.35182  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 419.71877 -19.88774 422.56378 -15.33519  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 361.67493 92.78487 328.1009 92.21613  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 362.24411 83.11104 328.1009 83.68022  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 360.53702 83.68022 357.12239 87.0944  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 357.69156 80.26602 361.10576 83.68022  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 360.53702 93.92322 357.12239 96.76823  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 358.82991 89.37068 361.10576 92.21613  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 361.10576 67.17757 328.66965 67.17757  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 361.10576 67.17757 357.69156 71.16093  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 357.69156 63.1942 361.67493 67.17757  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 361.10576 23.92928 329.808 23.92928  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 361.10576 24.49846 358.26074 28.48183  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 359.39865 19.9459 361.67493 25.06763  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 360.53702 14.82463 330.37717 14.82463  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 361.10576 15.39337 357.69156 18.23882  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 358.26074 10.84126 361.10576 15.39337  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 361.67493 -3.95427 329.23882 -3.95427  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 360.53702 -2.81635 357.69156 0.02908  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 359.96783 -8.50682 361.67493 -3.3851  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
3583 -85 a(Tx)19 b(RF)3607 0 y(c)n(hain)3597 335 y(Tx)28
b(baseband)3654 -387 y(SM)-568 307 y @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  544.6263 62.34065 1.9919 .5 CLW mul sub 0 360 arc closepath gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  555.43805 20.23071 1.9919 .5 CLW mul sub 0 360 arc closepath gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 516.45793 9.13417 515.88875 28.48183  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 511.90538 23.36053 516.45793 28.48183  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 520.44128 23.36053 516.45793 27.3439  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 537.5131 43.27737 538.08185 9.13417  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 537.5131 43.84612 533.52974 43.84612  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 534.66766 39.86275 537.5131 43.27737  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 540.35812 39.86275 538.08185 43.27737  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 544.34149 62.05585 538.08185 43.84612  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  554.5845 47.82948 1.70709 .5 CLW mul sub 0 360 arc closepath gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 575.07051 49.53702 555.15367 48.96783  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 558.56786 62.05585 546.04903 62.62503  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 559.13704 79.12767 558.56786 62.05585  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 569.38005 78.5585 559.13704 77.98976  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 561.41331 20.51509 557.42995 20.51509  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 561.41331 -16.47354 561.98248 20.51509  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 565.39668 -16.47354 561.98248 -16.47354  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 554.5845 37.01773  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 555.15367 30.18892  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 277.45505 64.9013  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 278.02379 52.9512  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 278.02379 41.0011  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 277.45505 30.18892  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 311.02908 50.67493  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 311.02908 41.57028  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 311.59825 33.6031  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 412.88995 58.07248  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 412.88995 48.39865  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 412.88995 38.15565  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 412.88995 27.3439  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 413.45914 18.808  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 413.45914 9.13417  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 414.59705 -1.678  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 333.22218 77.98976  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 333.22218 77.98976  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 334.36053 9.13417  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 573.36342 38.72482  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 573.36342 29.051  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 572.79424 19.9459  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 573.36342 9.70291  false NArray /DS 3.41418 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show grestore } bind def  newpath n { transform floor .5 add exch floor .5 add exch itransform Dot } repeat end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 214.28993 44.4153 211.44447 48.39865  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 211.44447 38.15565 215.42784 43.27737  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 295.6648 80.83476 291.68143 85.38731  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 293.38852 75.71349 296.23354 80.26602  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 295.09561 9.70291 291.68143 14.25545  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end

@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 292.81934 4.58162 295.09561 10.27208  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial 2173
-277 a Fi(N)2218 -266 y(t)2175 85 y Fh(1)2192 169 y(2)2803
-472 y(1)2813 -307 y(2)2808 394 y Fi(p)4140 -383 y Fh(1)4136
-142 y(2)4131 391 y Fi(N)4176 402 y(t)2161 -482 y Fh(1)2166
-416 y(2)1707 -392 y(1)1703 181 y Fi(p)2176 303 y(N)2221
314 y(t)1792 -184 y Fg(c)n(hannel)e(use-1)1797 410 y(c)n(hannel)g(use-)
p Ff(p)2544 157 y Fe(P)673 -156 y Fj(Mo)r(dulation)1292
-165 y(Serial)g(to)2477 -203 y(Pseudo)2992 -208 y(P)n(arallel)3824
-383 y(TX.)610 907 y(T)-7 b(ransmit)27 b(an)n(tenna)96
1043 y Fd(p)14 b Fj(log)259 1063 y Fc(2)310 1043 y Fd(N)377
1055 y Fb(t)-568 -127 y Fd(p)p Fj([log)-396 -107 y Fc(2)-345
-127 y Fd(N)-278 -115 y Fb(t)-230 -127 y Fj(+)k(log)-40
-107 y Fc(2)11 -127 y Fa(j)p Fd(A)p Fa(j)p Fj(])249 58
y Fd(p)c Fj(log)412 78 y Fc(2)463 58 y Fa(j)p Fd(A)p
Fa(j)-568 307 y @beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 98.20268 -76.79323 97.6335 43.27737  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.13791 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def [ 140.88179 -77.3624 98.20268 -76.79323  /Lineto /lineto load def false Line  gsave 1.13791 SLW 0  setgray 0 setlinecap stroke  grestore end
 @endspecial 316 183 a Fj(bits)291
1171 y(bits)-595 1191 y
 tx@Dict begin CP CP translate 1 1.0 div 1 1.0 div scale NET  end
 -595 1191 a 0 TeXcolorgray 0
TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
